trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  dockerRegistryServiceConnection: '<your-docker-registry-service-connection>'
  imageRepository: '<your-docker-repository>'
  containerRegistry: '<your-container-registry>'
  tag: 'latest'

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: UseJava@1
      inputs:
        versionSpec: '17'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'
        jdkFile: 'default'

    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
        options: '-DskipTests'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/target/hello-world-1.0.0-SNAPSHOT.jar'
        ArtifactName: 'drop'

- stage: BuildAndPushDockerImage
  dependsOn: Build
  jobs:
  - job: BuildAndPushDockerImage
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'drop'
        downloadPath: '$(System.DefaultWorkingDirectory)/target'

    - task: Docker@2
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(tag)